/* utility classes */


// --------------------------------------------------
// global utility classes                           |
// --------------------------------------------------
// use utility classes sparingly, the majority of this should be handled at the component level
// bem methodology tells us to keep everything 'as one' in the same component/file


// display
// --------------------------------------------------

.block {
	display: block !important;
}
.inline {
	display: inline !important;
}
.inline-block {
	display: inline-block !important;
}
.hidden {
	display: none !important;
}
.hidden-mobile {
	@media (max-width: $screen-xs-max) {
		display: none !important;
	}
}
.hidden-tablet {
	@media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
		display: none !important;
	}
}
.hidden-desktop {
	@media (min-width: $screen-md-min) {
		display: none !important;
	}
}

// makes an element visually hidden, but still accessible to keyboards and assistive devices.
// http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
.sr-only {
	position: absolute !important;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	width: 1px;
	height: 1px;
}


// layout
// --------------------------------------------------

.float-left {
	float: left !important;
}
.float-right {
	float: right !important;
}
.clear {
	clear: both !important;
}
.clear-left {
	clear: left !important;
}
.clear-right {
	clear: right !important;
}


// typography
// --------------------------------------------------

.text-left {
	text-align: left !important;
}
.text-center {
	text-align: center !important;
}
.text-right {
	text-align: right !important;
}
.font-weight-thin {
	font-weight: $text-weight-thin !important;
}
.font-weight-light {
	font-weight: $text-weight-light !important;
}
.font-weight-normal {
	font-weight: $text-weight-normal !important;
}
.font-weight-bold {
	font-weight: $text-weight-bold !important;
}
.font-weight-black {
	font-weight: $text-weight-black !important;
}
.text-xsmall {
	font-size: 75%; // 12px at 16px
}
small,
.text-small {
	font-size: 87.5%; // 14px at 16px
}
.text-large {
	font-size: 112.5%; // 18px at 16px
}
.text-xlarge {
	font-size: 125%; // 20px at 16px
}
.word-wrap {
	@include word-wrap;
}
.ellipsis {
	@include ellipsis;
}
.disclaimer {
	color: $text-color-light;
}


// --------------------------------------------------
// project specific utility classes                 |
// --------------------------------------------------
// global utility classes that are specific to this project
// e.g. colour classes that the client can select and apply from the cms

